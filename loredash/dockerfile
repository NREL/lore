# The base image is often a plain Linux OS
# For first builds, use python:3.8.0. However, this will result in very large images
# The smaller, popular alpine base image has issues for Python builds:
#  https://pythonspeed.com/articles/alpine-docker-python/
FROM python:3.8-slim-buster
LABEL maintainer="NREL - Thermal Energy Systems R&D \
                  matthew.boyd@nrel.gov" \
      version="1.0.0"

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# See: http://www.djangocurrent.com/2018/02/docker-run-as-non-root-user.html

# Update and install some core Linux components
RUN pip install --upgrade pip
RUN apt-get -qq update
RUN apt-get -qq install gcc

# Install coinor-cbc solver for Pyomo (Windows uses cbc.exe)
RUN apt-get -qq install -y coinor-cbc

# Create a group and user, both named 'app', that this app will run as
# '-r' means create a system account
# '-g app' means add to group 'app'
# '-d /loredash' means /loredash is the user's login directory
# '-s /sbin/nologin' means /sbin/nologin is the user's login shell
# '-c "Docker image user"' is just a comment, usually a description of the login
# 'app' is the name of the user
RUN groupadd -r app && \
    useradd -r -g app -d /loredash -s /sbin/nologin -c "Docker image user" app

# Give user 'app' root privileges (leave commented, just for testing)
# RUN usermod -aG sudo app

# Create a base directory, specify ownership by 'app' user and 'app' group, and
#  set this directory as WORKDIR
ENV SITE_DIR=/loredash/
RUN install -g app -o app -d ${SITE_DIR}
WORKDIR $SITE_DIR

# Add local package installation location to image PATH
ENV PATH="${SITE_DIR}.local/bin:${PATH}"

# Copy files from current directory into image directory ${SITE_DIR},
#  specifying group and user ownership
COPY --chown=app:app . ${SITE_DIR}

# Remove the config/ directory that was just copied as this will be bind mounted later
# TODO: add this to a .dockerignore file instead
RUN rm -rf config

# Add all sub-directory group permissions (g+s) the same as base directory so new
#  files and directory inherit from these sub-directories they're in
RUN find ${SITE_DIR} -type d -exec chmod g+s {} \;

# Add group write (g+w) permission on base directory contents recursively (-R)
RUN chmod -R g+w ${SITE_DIR}

# Switch to user named 'app'
USER app

# Install requirements
RUN pip install -r ${SITE_DIR}/requirements.txt

CMD ["/bin/bash"]

# TODO?: Replicate a virtualenv, see here for why:  https://pythonspeed.com/articles/activate-virtualenv-dockerfile/
# Also see: https://pythonspeed.com/articles/activate-conda-dockerfile/
# ENV VIRTUAL_ENV=/loredash
# RUN python -m venv $VIRTUAL_ENV
# ENV PATH="$VIRTUAL_ENV:$PATH"
